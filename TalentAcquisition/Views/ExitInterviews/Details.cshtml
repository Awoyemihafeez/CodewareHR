@model TalentAcquisition.BusinessLogic.UpdatedDomain.ExitInterview

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_NormalLayout.cshtml";
}


<ol class="breadcrumb">
    <li><a href="@Url.Action("Dashboard","Admin")">Home</a></li>
    @*<li><a href="#">Private</a></li>*@
    @*<li><a href="#">Pictures</a></li>*@
    <li class="active">Exit</li>
    <li class="active">Records</li>
    <li class="active">@Model.No</li>
</ol>
<style>
    h5 {
        color: #428bca !important;
        text-decoration: none !important;
    }

    a {
        text-decoration: none !important;
    }

        a:hover {
            color: #2a6496;
            text-decoration: none;
        }

    h5 {
        border-bottom: 1px solid lightgrey;
        padding-bottom: 0.8em;
    }
</style>

<section class="container-fluid">
    <span class="alert-danger">@ViewBag.Error</span>
    <div class="container-fluid" ng-controller="ExitController" ng-init="init('@Model.No')">
        <div class="">
            <div class="">
                <a data-toggle="collapse" href="#collapse1"> <h5 style="font-weight:bold">Exit Record</h5></a>
            </div>
        </div>
        <div id="collapse1" class="panel-collapse collapse in">
            <div class="panel-body">
          
                <div class="form-horizontal" style="font-size:80%">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-12 col-lg-6">
                        <div class="">
                            <div class="form-group">
                                @Html.LabelFor(model => model.No, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.No, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeNo, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @*<select class="form-control" required id="EmployeeNo" name="EmployeeNo" ng-model="SelectedEmployee"
                                    ng-options="item.Number for item in employees track by item.Id" ng-change="selectedemployeechanged()"></select>*@
                                    @Html.EditorFor(model => model.EmployeeNo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @*<input ng-model="selectedEmployeeName" required id="EmployeeName" name="EmployeeName" class="form-control input-sm" ng-readonly="true" />*@
                                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control input-sm", @required = true } })
                                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OtherReasons, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @*<input id="OtherReasons" name="OtherReasons" class="form-control input-sm" ng-readonly="{{}}" />*@
                                    @Html.EditorFor(model => model.OtherReasons, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.OtherReasons, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LeavingOn, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LeavingOn, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.LeavingOn, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ReEmploy, htmlAttributes: new { @class = "col-md-6" })
                                <div class="col-md-6">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.ReEmploy)
                                        @Html.ValidationMessageFor(model => model.ReEmploy, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-6">
                        <div class="">

                            <div class="form-group">
                                @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.InterviewDate, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.InterviewerNo, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @*<select class="form-control" id="InterviewerNo" required name="InterviewerNo" ng-model="SelectedInterviewer"
                                    ng-options="item.Number for item in employees track by item.Id" ng-change="selectedInterviewerchanged()"></select>*@
                                    @Html.EditorFor(model => model.InterviewerNo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.InterviewerNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.InterviewerName, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @*<input ng-model="selectedInterviewerName" id="InterviewerName" required name="InterviewerName" class="form-control input-sm" ng-readonly="true" />*@
                                    @Html.EditorFor(model => model.InterviewerName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.InterviewerName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ApproveProcess, htmlAttributes: new { @class = "col-md-6" })
                                <div class="col-md-6">
                                    <div class="checkbox">
                                        @Html.DisplayFor(model => model.ApproveProcess)
                                        @Html.ValidationMessageFor(model => model.ApproveProcess, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProcessCompleted, htmlAttributes: new { @class = "col-md-6" })
                                <div class="col-md-6">
                                    <div class="checkbox">
                                        @Html.DisplayFor(model => model.ProcessCompleted)
                                        @Html.ValidationMessageFor(model => model.ProcessCompleted, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


            <div class="">
                <div class="">
                    <div class="">
                        <a data-toggle="collapse" href="#collapse2"> <h5 style="font-weight:bold">Exit Checklist</h5></a>
                    </div>
                </div>
                <div id="collapse2" class="panel-collapse collapse in">
                    <div class="panel-body">

                        <div class=" container-fluid">

                            <form id="empform">
                                <table class="table table-striped" style="font-size:90%;border:1px solid lightgrey">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Status</th>
                                            <th>Modification</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ExitCheckList != null)
                                    {
                                        foreach (var item in Model.ExitCheckList)
                                        {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                        <td>@Html.DisplayFor(modelItem=>item.Completed)</td>
                                        <td></td>
                                    </tr>
                                        }
                                    }
                                    </tbody>

                                </table>
                            </form>
                        </div>
                    </div>
                </div>
    </div>
</section>
<script>
    employeesbs=@Html.Raw(Json.Encode(ViewBag.Employees));
</script>

